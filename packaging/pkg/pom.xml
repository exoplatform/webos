<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.exoplatform.webos</groupId>
    <artifactId>exo.webos.packaging</artifactId>
    <version>2.0.11-SNAPSHOT</version>
  </parent>
  <artifactId>exo.webos.packaging.assembly</artifactId>
  <packaging>pom</packaging>
  <name>eXo WebOS Assemblies</name>
  <properties>
    <product>webos</product>
    <deploy>tomcat</deploy>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.exoplatform.tool</groupId>
      <artifactId>exopackage</artifactId>
      <version>${org.exoplatform.exopackage.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>kernel.packaging.module</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>core.packaging.module</artifactId>
      <version>${org.exoplatform.core.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ws</groupId>
      <artifactId>ws.packaging.module</artifactId>
      <version>${org.exoplatform.ws.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.jcr</groupId>
      <artifactId>jcr.packaging.module</artifactId>
      <version>${org.exoplatform.jcr.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>portal.packaging.module</artifactId>
      <version>${org.exoplatform.portal.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.component.management</artifactId>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.webui.dashboard</artifactId>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.gadgets-server</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.portlet.web</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.web.eXoResources</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.starter.war</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.portlet.dashboard</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.portlet.exoadmin</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.web.rest</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.eXoGadgets</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.web.portal</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.webos</groupId>
      <artifactId>webos.packaging.module</artifactId>
      <version>${project.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.webos</groupId>
      <artifactId>webos.packaging.product</artifactId>
      <version>${project.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.jcr</groupId>
      <artifactId>exo.jcr.component.ftp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.jcr</groupId>
      <artifactId>exo.jcr.framework.command</artifactId>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.jcr</groupId>
      <artifactId>exo.jcr.component.webdav</artifactId>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.jcr</groupId>
      <artifactId>exo.jcr.framework.web</artifactId>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
    </dependency>
    <dependency>
      <groupId>net.oauth.core</groupId>
      <artifactId>oauth</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>rhino</groupId>
      <artifactId>js</artifactId>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gatein.wci</groupId>
      <artifactId>wci-tomcat6</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gatein.pc</groupId>
      <artifactId>pc-controller</artifactId>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.tool</groupId>
      <artifactId>exo.tool.webunit</artifactId>
      <version>${exo.tool.webunit.version}</version>
    </dependency>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
    </dependency>
    <dependency>
      <groupId>html-parser</groupId>
      <artifactId>html-parser</artifactId>
      <version>${html-parser.version}</version>
    </dependency>
    <dependency>
      <groupId>org.gatein.wci</groupId>
      <artifactId>wci-exo</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jsecurity</groupId>
      <artifactId>jsecurity</artifactId>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ws</groupId>
      <artifactId>exo.ws.frameworks.servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
    </dependency>
    
    <!-- Missing packaging dependencies -->
    <dependency><groupId>org.slf4j</groupId><artifactId>slf4j-jdk14</artifactId></dependency>
    <dependency><groupId>c3p0</groupId><artifactId>c3p0</artifactId><version>0.9.1.2</version></dependency>
    <!-- org.jboss.:jbossxb was defined on gatein-dep -->
    <dependency><groupId>org.jboss</groupId><artifactId>jbossxb</artifactId></dependency>
    <!-- javax.resource:connector-api:1.5 was defined on gatein-dep -->
    <dependency><groupId>javax.resource</groupId><artifactId>connector-api</artifactId></dependency>
    <!-- caja:json_simple:r1 was defined on gatein-dep -->
    <dependency><groupId>caja</groupId><artifactId>json_simple</artifactId></dependency>
    <!-- net.sf.ehcache:ehcache WAS NOT DEFINED on gatein-dep (2.2.0) -->
    <dependency><groupId>net.sf.ehcache</groupId><artifactId>ehcache</artifactId><version>1.6.0</version><type>jar</type></dependency>
    <!-- org.jgroups:jgroups WAS NOT DEFINED on gatein-dep (2.11.1.Final) -->
    <dependency><groupId>org.jgroups</groupId><artifactId>jgroups</artifactId><version>${org.jgroups.version}</version></dependency>
    <!-- log4j:log4j WAS NOT DEFINED on gatein-dep (1.2.16) -->
    <dependency><groupId>log4j</groupId><artifactId>log4j</artifactId><version>1.2.14</version></dependency>
    <!-- jcr:jcr WAS NOT DEFINED on gatein-dep -->
    <dependency><groupId>jcr</groupId><artifactId>jcr</artifactId><version>${jcr.version}</version></dependency>
    <!-- de.odysseus.juel:juel-api WAS NOT DEFINED on gatein-dep -->
    <dependency><groupId>de.odysseus.juel</groupId><artifactId>juel-api</artifactId><version>2.1.2</version><type>jar</type></dependency>
    <!-- de.odysseus.juel:juel-impl:2.1.2 WAS NOT DEFINED on gatein-dep (2.2.3) -->
    <dependency><groupId>de.odysseus.juel</groupId><artifactId>juel-impl</artifactId><version>2.1.2</version><type>jar</type></dependency>
    <!-- asm:asm WAS NOT DEFINED on gatein-dep (1.5.3) -->
    <dependency><groupId>asm</groupId><artifactId>asm</artifactId><version>3.1</version><type>jar</type></dependency><!-- 3.1-->
    <!-- org.jboss.cache:jbosscache-core WAS NOT DEFINED on gatein-dep (3.2.6.GA) -->
    <dependency><groupId>org.jboss.cache</groupId><artifactId>jbosscache-core</artifactId><version>3.2.7.GA</version><type>jar</type></dependency>
    <!-- End missing packaging dependencies -->
  </dependencies>
  <build>
    <plugins>
      <!-- needed for exobuild to call maven dependency:get -->
      <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-dependency-plugin</artifactId>
         <configuration>
            <repositoryUrl>xxx</repositoryUrl>
         </configuration>
      </plugin>
      
      <!-- check-out exobuild -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <overWriteSnapshots>true</overWriteSnapshots>
              <artifactItems>
                <artifactItem>
                  <groupId>org.exoplatform.tool</groupId>
                  <artifactId>exopackage</artifactId>
                  <type>zip</type>
                  <outputDirectory>target/exopackage</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-dependencies</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeTypes>js</includeTypes>
              <stripVersion>true</stripVersion>
              <!--includeArtifactIds>exo.packaging.*.module</includeArtifactIds-->
              <outputDirectory>${project.build.directory}/exopackage-conf</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>pkg-tomcat-legacy</id>
      <build>
        <finalName>WebOS-${project.version}</finalName>
        <plugins>
          <!-- Ensure your environment is correctly setup -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>tomcat-check-environment-ready</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>exo.projects.directory.dependencies</property>
                      <message>"You must define the property exo.projects.directory.dependencies to give the path to the directory where you store your applications servers"</message>
                    </requireProperty>
                    <requireProperty>
                      <property>exo.projects.app.tomcat.version</property>
                      <message>"You must define the property exo.projects.app.tomcat.version to give the name of the directory where is stored tomcat"</message>
                    </requireProperty>
                    <requireFilesExist>
                      <files>
                        <file>${exo.projects.directory.dependencies}/${exo.projects.app.tomcat.version}/</file>
                      </files>
                      <message>"The following Tomcat directory doesn't exist : ${exo.projects.directory.dependencies}/${exo.projects.app.tomcat.version}"</message>
                    </requireFilesExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- run exo build -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>tomcat-exopackage</id>
                <phase>package</phase>
                <configuration>
                  <executable>java</executable>
                  <workingDirectory>${basedir}</workingDirectory>
                  <arguments>
                    <argument>-Dexo.package.home=${basedir}/target/exopackage</argument>
                    <argument>-Dexo.current.dir=${basedir}</argument>
                    <argument>-Dexo.base.dir=${exo.projects.directory.base}</argument>
                    <argument>-Dexo.conf.dir=${basedir}/target/exopackage-conf</argument>
                    <argument>-Dexo.working.dir=${basedir}/target</argument>
                    <argument>-Dexo.dep.dir=${exo.projects.directory.dependencies}</argument>
                    <!-- to get the server ref install -->
                    <argument>-Dexo.m2.repos=file:${settings.localRepository}</argument>
                    <argument>-Dclean.server=${exo.projects.app.tomcat.version}</argument>
                    <argument>-Dexo.m2.home=${maven.home}</argument>
                    <argument>-Xshare:auto</argument>
                    <argument>-Xms128m</argument>
                    <argument>-Xmx512m</argument>
                    <argument>-classpath</argument>
                    <argument>${basedir}/target/exopackage/lib/js.jar</argument>
                    <argument>org.mozilla.javascript.tools.shell.Main</argument>
                    <argument>${basedir}/target/exopackage/javascript/eXo/eXo.js</argument>
                    <argument>exobuild</argument>
                    <argument>--product=webos</argument>
                    <argument>--deploy=tomcat</argument>
                  </arguments>
                </configuration>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>arc-tomcat</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>tomcat-assembly</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>src/main/assembly/tomcat-zip.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>pkg-jbossas</id>
      <build>
        <finalName>WebOS-${project.version}</finalName>
        <plugins>
          <!-- Ensure your environment is correctly setup -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>jbossas-check-environment-ready</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>exo.projects.directory.dependencies</property>
                      <message>"You must define the property exo.projects.directory.dependencies to give the path to the directory where you store your applications servers"</message>
                    </requireProperty>
                    <requireProperty>
                      <property>exo.projects.app.jboss.version</property>
                      <message>"You must define the property exo.projects.app.jboss.version to give the name of the directory where is stored JBossAS"</message>
                    </requireProperty>
                    <requireFilesExist>
                      <files>
                        <file>${exo.projects.directory.dependencies}/${exo.projects.app.jboss.version}/</file>
                      </files>
                      <message>"The following JBossAS directory doesn't exist : ${exo.projects.directory.dependencies}/${exo.projects.app.tomcat.version}"</message>
                    </requireFilesExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- run exo buils -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>jbossas-exopackage</id>
                <phase>package</phase>
                <configuration>
                  <executable>java</executable>
                  <workingDirectory>${basedir}</workingDirectory>
                  <arguments>
                    <argument>-Dexo.package.home=${basedir}/target/exopackage</argument>
                    <argument>-Dexo.current.dir=${basedir}</argument>
                    <argument>-Dexo.base.dir=${exo.projects.directory.base}</argument>
                    <argument>-Dexo.conf.dir=${basedir}/target/exopackage-conf</argument>
                    <argument>-Dexo.working.dir=${basedir}/target</argument>
                    <argument>-Dexo.dep.dir=${exo.projects.directory.dependencies}</argument>
                    <!-- to get the server ref install -->
                    <argument>-Dexo.m2.repos=file:${settings.localRepository},http://maven2.exoplatform.org/rest/maven2,http://repository.jboss.org/maven2</argument>
                    <argument>-Dclean.server=${exo.projects.app.jboss.version}</argument>
                    <argument>-Dexo.m2.home=${maven.home}</argument>
                    <argument>-Xshare:auto</argument>
                    <argument>-Xms128m</argument>
                    <argument>-Xmx512m</argument>
                    <argument>-classpath</argument>
                    <argument>${basedir}/target/exopackage/lib/js.jar</argument>
                    <argument>org.mozilla.javascript.tools.shell.Main</argument>
                    <argument>${basedir}/target/exopackage/javascript/eXo/eXo.js</argument>
                    <argument>exobuild</argument>
                    <argument>--product=webos</argument>
                    <argument>--deploy=jbossear</argument>
                  </arguments>
                </configuration>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
